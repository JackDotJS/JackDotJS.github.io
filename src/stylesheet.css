:root {
  --section-background: #FFF;
  --text: #292929;
  --text-2: #757575;
  --text-2-em: #404040;
  --button-bg: #292929;
  --button-text: var(--section-background);
  --button-bg-hover: #FF672B;
  --button-text-hover: var(--section-background);
  --button-outline-hover: var(--button-bg);
  --focus-outline: #FF932B;

  --anim-delay: 300ms;
  --anim-duration: 0.75;
}

@media (prefers-color-scheme: dark) {
  :root {
    --section-background: #292929;
    --text: #EEE;
    --text-2: #919191;
    --text-2-em: #BBB;
    --button-bg: #EEE;
    --button-text: #292929;
    --button-bg-hover: #FF672B;
    --button-text-hover: var(--button-bg);
    --button-outline-hover: var(--button-bg);
    --focus-outline: #FF932B;
  }
}

@font-face {
  font-family: "CoreSans";
  font-weight: bold;
  src: url("/Core\ Sans\ CR\ 75\ ExtraBold.ttf") format("opentype")
}

@font-face {
  font-family: "CoreSans";
  font-weight: normal;
  src: url("/Core\ Sans\ CR\ 55\ Medium.ttf") format("opentype")
}

/* animated background images */

#backgrounds {
  pointer-events: none;
  user-select: none;
  position: fixed;
  top: 0;
  left: 0;
  z-index: -1000;
  width: 100vw;
  height: 100vh;
}

#backgrounds > img {
  position: fixed;
  width: 100vw;
  height: 100vh;
  object-fit: cover;
  opacity: 0;
  transition-property: opacity;
  transition-duration: 2.5s;
  transition-timing-function: ease-in-out;
}

/* general layout stuff */

body {
  --content-width: 600px;
  --se-padding: 1rem;
  --se-gap: 2rem;

  width: 100%;
  min-height: 100%;
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0;
  padding: var(--se-gap);
  box-sizing: border-box;
  background-image: linear-gradient(90deg, #FF672B, #FFA92B);
}

main {
  position: relative;
  font-family: "CoreSans", Tahoma, Geneva, Verdana, sans-serif;
  width: 100%;
  max-width: var(--content-width);
}

@keyframes animLogoContainer {
  0% {
    opacity: 1;
    width: 15rem;
    height: 15rem;
    background-color: rgba(255, 255, 255, 0);
    box-shadow: 0 0 0 rgba(0,0,0,0);
  }

  33% {
    opacity: 1;
    width: 15rem;
    height: 15rem;
    background-color: #FFF;
    box-shadow: 0 0 0 rgba(0,0,0,0);
  }

  50% {
    opacity: 1;
    width: 100%;
    height: 15rem;
    background-color: #FFF;
    box-shadow: 0 0 0 rgba(0,0,0,0);
  }

  66% {
    opacity: 1;
    top: 50%;
    width: 100%;
    height: 100%;
    background-color: var(--section-background);
    box-shadow: 0 5px 10px rgba(0,0,0,0.5);
  }

  100% {
    opacity: 0;
    top: 50%;
    width: 100%;
    height: 100%;
    background-color: var(--section-background);
    box-shadow: 0 5px 10px rgba(0,0,0,0.5);
  }
}

@keyframes animLogo {
  0% {
    opacity: 0;
  }

  30% {
    opacity: 1
  }

  97% {
    opacity: 1;
  }

  98% {
    opacity: 0;
  }

  100% {
    opacity: 0;
  }
}

@keyframes animMain {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

#content {
  opacity: 0;
  animation-name: animMain;
  animation-timing-function: cubic-bezier(0,.65,.5,1);
  animation-delay: calc(3000ms * var(--anim-duration) + var(--anim-delay));
  animation-fill-mode: both;
  animation-duration: calc(1000ms * var(--anim-duration));
}

#content :is(header, section, footer) {
  background-color: var(--section-background);
  color: var(--text);
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  padding: var(--se-padding);
  gap: var(--se-padding);
  contain: content;
}

#content > * {
  position: relative;
  transform: translateX(-50%);
  left: 50%;
  border-radius: 0.75rem;
  box-shadow: 0 5px 10px rgba(0,0,0,0.5);
}

#content > :not(:last-child) {
  margin-bottom: var(--se-gap);
}

#logoAnim {
  width: 15rem;
  height: 15rem;
  top: 0px;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: rgba(255, 255, 255, 0);
  opacity: 1;

  animation-name: animLogoContainer;
  animation-timing-function: cubic-bezier(0,.65,.5,1);
  animation-delay: calc((1000ms * var(--anim-duration)) + var(--anim-delay));
  animation-fill-mode: both;
  animation-duration: calc(3000ms * var(--anim-duration));
  
  position: absolute;
  border-radius: 0.75rem;
  overflow: hidden;
}

#logoAnim > * {
  opacity: 0;
  animation-name: animLogo;
  animation-timing-function: cubic-bezier(0,.65,.5,1);
  animation-delay: var(--anim-delay);
  animation-fill-mode: both;
  animation-duration: calc(2s * var(--anim-duration));

  width: 100%;
  height: 100%;
  object-fit: contain;
}

h1, h2, h3, h4, h5 {
  font-weight: bold;
  text-align: center;
  margin: 0;
}

h1 {
  font-size: 40px;
}

h2 {
  font-size: 26px;
}

h3 {
  margin-top: 0.75em;
}

p {
  text-align: center;
  margin-top: 0;
  margin-bottom: 1em;
}

p, ul, table, time {
  font-weight: normal;
  font-size: 17px;
  color: var(--text-2);
}

p a {
  text-decoration: underline;
  text-decoration-color: transparent;
  text-decoration-thickness: 2px;
}

p a:is(:hover, :focus, :focus-visible) {
  text-decoration-color: currentColor;
}

a {
  color: var(--focus-outline);
  transition: all 250ms cubic-bezier(0,.65,.5,1);
  text-decoration: none;
  font-weight: bold;
  outline: 10px solid transparent;
  outline-offset: 10px;
  border-radius: 0.1em;
}

a:hover {
  color: var(--text); 
}

a:is(:focus, :focus-visible) {
  color: var(--text);
  outline: 3px solid var(--focus-outline);
  outline-offset: 3px;
}

ul {
  margin: 0 2em;
  padding: 0;
  margin-top: 0;
}

ul.no-bullet {
  list-style: none;
}

li:not(:first-of-type) {
  margin-top: 1em;
  text-align: justify;
}

em {
  color: var(--text-2-em);
  font-weight: bold;
  font-style: oblique 10deg;
}

table {
  table-layout: fixed;
  width: 100%;
  border-collapse: collapse;
  border-radius: 0.25rem;
  border-style: hidden;
  box-shadow: 0 0 0 2px rgba(0,0,0,0.5);
}

td, th {
  text-align: center;
  border: 2px solid rgba(0,0,0,0.5);
  padding: 1em;
  overflow-wrap: break-word;
}

th {
  font-size: 28px;
  background-color: rgba(0,0,0,0.1);
}

/* collapsible sections */

#collapsibles {
  /*
  transition-delay is done via collapsible-sections.ts
  cus im not sure how else to keep it at a certain value
  when changing which panels are shown, as opposed to
  opening or closing them.
  */
  transition-property: width, height, margin-bottom;
  overflow: clip;
  backdrop-filter: blur(5px) brightness(90%);
  -webkit-backdrop-filter: blur(5px) brightness(90%);
}

#collapsibles:not(.visible) {
  margin-bottom: 0;
}

#collapsibles, #collapsibles > *, #collapsibles > * > * {
  transition-timing-function: cubic-bezier(.75,0,.25,1);
  transition-duration: 250ms;
}

#collapsibles > * {
  transition-property: opacity;
  position: absolute;
  width: var(--content-width);
  max-width: calc(100vw - (var(--se-gap) * 2));
}

#collapsibles > *.visible {
  transition-delay: 500ms;
}

#collapsibles > *:not(.visible) {
  transition-delay: 0ms;
  opacity: 0;
  user-select: none;
  pointer-events: none;
}

#collapsibles > *:not(.visible) * {
  user-select: none;
  pointer-events: none;
}

/* gallery */

#collapsibles > #gallery {
  width: calc(var(--content-width) * 2);
  max-width: calc(100vw - (var(--se-gap) * 2));
}

#gallery > p {
  max-width: var(--content-width);
  margin-left: auto;
  margin-right: auto;
}

#gallery-items {
  display: flex;
  width: 100%;
  justify-content: space-around;
  flex-wrap: wrap;
  gap: var(--se-padding);
}

.g-item-container {
  width: calc(33% - (var(--se-padding) / 2));
  aspect-ratio: 1 / 1;
  text-decoration: none;
}

@media screen and (max-width: 600px) {
  .g-item-container {
    width: 100%;
  }
}

@media screen and (min-width: 601px) and (max-width: 900px) {
  .g-item-container {
    width: calc(50% - (var(--se-padding) / 2));
  }
}

.g-item-container :is(p, time) {
  transition: all 250ms cubic-bezier(0,.65,.5,1);
  text-decoration: underline;
  text-decoration-color: transparent;
  text-decoration-thickness: 2px;
}

.g-item-container:is(:hover, :focus, :focus-visible) :is(p, time) {
  text-decoration-color: currentColor;
}

.g-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  margin: 0;
}

.g-img-container {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 0;
  min-width: 0;
}

.g-img-container > img {
  border-radius: 0.25rem;
  transition: all 250ms cubic-bezier(0,.65,.5,1);
  min-height: 0;
  min-width: 0;
  max-width: 100%;
  max-height: 100%;
  box-shadow: 0 5px 10px rgba(0,0,0,0.5);
}

.g-item:not(:active):hover img {
  transform: translateY(-5px);
}

.g-label-container {
  width: 90%;
  margin-top: 1rem;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-start;
}

.g-label-container > p {
  
  text-align: left;
  width: 100%;
  font-style: oblique 10deg;
  font-size: 24px;
  margin-bottom: 0.5em;
}

.g-label-container > time {
  text-align: right;
  transform: translateY(-0.15em);
}

#viewer-container {
  transition: all 250ms cubic-bezier(0,.65,.5,1);
  display: flex;
  align-items: center;
  justify-content: center;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0,0,0,0.9);
  box-sizing: border-box;
  padding: 1rem;
  user-select: none;
  pointer-events: none;
  opacity: 0;
  z-index: 999999;
}

#viewer-container.visible {
  opacity: 1;
  pointer-events: auto;
  backdrop-filter: blur(5px);
}

#viewer-container figure {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  margin: 0;
}

#viewer-container div {
  min-width: 0;
  min-height: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 1;
}

#viewer-container img {
  border-radius: 0.25rem;
  object-fit: contain;
  max-width: 100%;
  max-height: 100%;
  box-shadow: 0 5px 10px rgba(0,0,0,0.5);
}

#viewer-container figcaption {
  margin-top: 1rem;
  display: flex;
  align-items: flex-start;
  gap: 1rem;
  flex-grow: 0;
  max-width: 800px;
  width: 100%;
  background-color: var(--section-background);
  box-sizing: border-box;
  padding: 1rem;
  border-radius: 0.75rem;
  box-shadow: 0 5px 10px rgba(0,0,0,0.5);
}

#viewer-container figcaption > p {
  text-align: left;
  width: 100%;
  font-style: oblique 10deg;
  font-size: 20px;
}

#viewer-container figcaption > time {
  text-align: right;
  font-size: 34px;
  transform: translateY(-0.15em);
}

/* header */

header {
  align-items: center;
}

header > img {
  width: 33%;
}

@media screen and (max-width: 600px) {
  header > img {
    width: 44%;
  }
}

header > img:hover {
  transform: scaleX(-100%);
}

/* buttons */

.button-list {
  display: flex;
  width: 100%;
  justify-content: center;
  flex-wrap: wrap;
  gap: var(--se-padding);
}

.button-list > a {
  --b-padding: 0.25em;

  position: relative;
  width: 33%;
  height: 3em;
  flex-grow: 1;
  background-color: var(--button-bg);
  border-radius: 0.25rem;
  border: 3px solid var(--button-bg);
  letter-spacing: 0.5px;
  box-sizing: border-box;
  overflow-wrap: break-word;
  vertical-align: middle;
  font-size: 18px;
  color: var(--button-text);
  overflow: hidden;
  padding: var(--b-padding);
  -webkit-hyphens: manual;
  hyphens: manual;
  -webkit-hyphenate-character: " ";
  hyphenate-character: " ";
  text-decoration: underline;
  text-decoration-color: transparent;
  text-decoration-thickness: 2px;
}

.button-list > a:is(:hover, :focus, :focus-visible) {
  background-color: var(--button-bg-hover);
  border: 3px solid var(--button-outline-hover);
  color: var(--button-text-hover);
}

.button-list > a:is(:hover, :focus, :focus-visible) > span {
  text-decoration: underline;
  text-decoration-thickness: 2px;
}

.button-list > a > span, .button-list > a > .icon {
  position: absolute;
  transition: all 250ms cubic-bezier(0,.65,.5,1);
  box-sizing: border-box;
  width: calc(100% - (var(--b-padding) * 2));
  height: calc(100% - (var(--b-padding) * 2));
}

.button-list > a > span {
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
}

/* button labels are offset and have variable opacity if it has a .icon class element as a sibling */
/* cus it looks cool lmao */

.button-list > a > .icon ~ span {
  opacity: 0;
  transform: translateY(25%);
}

.button-list > a:is(:hover, :focus, :focus-visible) > .icon ~ span {
  opacity: 1;
  text-decoration: underline;
  text-decoration-thickness: 2px;
  transform: translateY(0%);
}

.button-list > a > .icon {
  -webkit-mask-size: contain;
  mask-size: contain;
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-position: center;
  mask-position: center;
  background-color: var(--button-text);
  opacity: 1;
  transform: translateY(0%);
}

.button-list > a:is(:hover, :focus, :focus-visible) > .icon {
  background-color: var(--button-text-hover);
  opacity: 0;
  transform: translateY(-25%);
}

/* cohost */

#li-cohost > .icon {
  -webkit-mask-image: url("../assets/social-icon-cohost.svg");
  mask-image: url("../assets/social-icon-cohost.svg");
}

#li-cohost:is(:hover, :focus, :focus-visible) {
  background-color: #83254F;
}

/* discord */

#li-discord > .icon {
  -webkit-mask-image: url("../assets/social-icon-discord.svg");
  mask-image: url("../assets/social-icon-discord.svg");
}

#li-discord:is(:hover, :focus, :focus-visible) {
  background-color: #5865F2;
}

/* retrospring */

#li-retrospring > .icon {
  -webkit-mask-image: url("../assets/social-icon-retrospring.svg");
  mask-image: url("../assets/social-icon-retrospring.svg");
}

#li-retrospring:is(:hover, :focus, :focus-visible) {
  background-color: #5e35b1;
}

/* tumblr */

#li-tumblr > .icon {
  -webkit-mask-image: url("../assets/social-icon-tumblr.svg");
  mask-image: url("../assets/social-icon-tumblr.svg");
}

#li-tumblr:is(:hover, :focus, :focus-visible) {
  background-color: #34526F;
}

/* github */

#li-github > .icon {
  -webkit-mask-image: url("../assets/social-icon-github.svg");
  mask-image: url("../assets/social-icon-github.svg");
}

#li-github:is(:hover, :focus, :focus-visible) {
  background-color: #161b22;
}

/* steam */

#li-steam > .icon {
  -webkit-mask-image: url("../assets/social-icon-steam.svg");
  mask-image: url("../assets/social-icon-steam.svg");
}

#li-steam:is(:hover, :focus, :focus-visible) {
  background-color: #28313F;
}

/* youtube */

#li-youtube > .icon {
  -webkit-mask-image: url("../assets/social-icon-youtube.svg");
  mask-image: url("../assets/social-icon-youtube.svg");
}

#li-youtube:is(:hover, :focus, :focus-visible) {
  background-color: #FF3333;
}

/* email */

#li-email > .icon {
  -webkit-mask-image: url("../assets/social-icon-email.svg");
  mask-image: url("../assets/social-icon-email.svg");
}

#li-email:is(:hover, :focus, :focus-visible) {
  background-color: #6D4AFF;
}